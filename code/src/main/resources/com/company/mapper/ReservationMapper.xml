<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="reservation">

    <!-- 예약 저장 -->
    <insert id="save" parameterType="com.company.domain.ReservationDTO">
        INSERT INTO reservations (store_id, username, phone, reservation_date, reservation_time, people_count)
        VALUES (#{storeId}, #{userName}, #{phone}, #{reservationDate}, #{reservationTime}, #{peopleCount})
    </insert>

    <!-- 특정 가게의 예약 목록 조회 (JOIN 추가) -->
    <select id="findByStoreId" parameterType="int" resultMap="reservationResultMap">
        SELECT r.id, r.store_id, s.store_name, r.username, r.phone, r.reservation_date, 
               r.reservation_time, r.people_count
        FROM reservations r
        JOIN restaurants s ON r.store_id = s.id
        WHERE r.store_id = #{storeId}
    </select>

    <!-- 전체 예약 목록 조회 (JOIN 추가) -->
    <select id="findAllReservations" resultMap="reservationResultMap">
        SELECT r.id, r.store_id, s.store_name, r.username, r.phone, r.reservation_date, 
               r.reservation_time, r.people_count
        FROM reservations r
        JOIN restaurants s ON r.store_id = s.id
        ORDER BY r.reservation_date ASC, r.reservation_time ASC;
    </select>

    <!-- 특정 날짜의 예약 목록 조회 (JOIN 추가) -->
    <select id="findByReservationDate" resultMap="reservationResultMap">
        SELECT r.id, r.store_id, s.store_name, r.username, r.phone, r.reservation_date, 
               r.reservation_time, r.people_count
        FROM reservations r
        JOIN restaurants s ON r.store_id = s.id
        WHERE DATE(r.reservation_date) = #{reservationDate}
        ORDER BY r.reservation_time ASC;
    </select>
     <!-- 특정 사용자의 예약 목록 조회 -->
    <select id="findByUserName" parameterType="String" resultMap="reservationResultMap">
        SELECT * FROM reservations WHERE username = #{userName} ORDER BY reservation_date ASC;
    </select>
    
     <!-- 특정 사용자와 특정 날짜의 예약 조회 -->
    <select id="findByUserNameAndDate" parameterType="map"  resultMap="reservationResultMap">
        SELECT * FROM reservations 
        WHERE username = #{userName} 
        AND reservation_date = #{searchDate}
        ORDER BY reservation_time ASC;
    </select>
    

    <!-- 예약 정보 매핑 -->
    <resultMap id="reservationResultMap" type="com.company.domain.ReservationDTO">
        <id column="id" property="id"/>
        <result column="store_id" property="storeId"/>
        <result column="store_name" property="storeName"/>
        <result column="username" property="userName"/>
        <result column="phone" property="phone"/>
        <result column="reservation_date" property="reservationDate" jdbcType="DATE"/>
        <result column="reservation_time" property="reservationTime" jdbcType="TIME"/>
        <result column="people_count" property="peopleCount"/>
    </resultMap>

</mapper>
